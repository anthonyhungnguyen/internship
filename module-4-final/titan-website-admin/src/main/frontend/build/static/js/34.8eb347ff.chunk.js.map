{"version":3,"sources":["containers/DefaultLayout/DefaultLayout.js","containers/Sidebar/Sidebar.js","containers/DefaultLayout/index.js","api/fetch.js","api/nav_role.js","api/role.js","api/init.js","_nav.js","routes.js"],"names":["DefaultFooter","Component","React","lazy","DefaultHeader","DefaultLayout","props","loading","className","appendRoleToRouter","items","items_roles","map","item","index","itemR","index2","name","roles","appendRoleToNav","children","child","isValidRole","userRole","rolesValid","includes","i","length","indexOf","state","nav_roles","navigation","result","localStorage","getItem","nav","role","this","setState","JSON","parse","getAllNavRole","fakeAuth","getAccessToken","then","res","data","re","array","getOneRole","getUsername","roleUSer","setItem","stringify","e","preventDefault","history","push","retRouter","routes","filter","route","routesAppendNav","console","log","retNavItems","ele","retNav","fixed","fallback","onLogout","signOut","display","navConfig","router","appRoutes","Container","fluid","Switch","idx","component","Route","key","path","exact","render","Redirect","from","to","postData","a","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","response","text","postDataToken","token","isJson","str","postDataTokenMode","signIn","username","password","user","code","type","Authorization","status","json","split","catch","err","swal","updateNavRole","toString","createNavRole","getAllRole","statusText","signout","updateUserRole","createUserRole","deleteUserRole","axios","create","baseURL","host","icon","badge","variant","Dashboard","Events","Event","EditEvent","NewEvent","RoleManagement","NavManagement","SourcesManagement","RulesManagement","RuleInfo","SourceInfo","DomainManagement","DomainInfo","ProfileManagement","ProfileInfo","TierManagement","TierInfo","RuleVersionInfo","DataDefinitions","AccumulationKeys","ReloadConfig","ClientManagement","ClientInfo"],"mappings":"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","file":"static/js/34.8eb347ff.chunk.js","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport * as router from 'react-router-dom';\nimport { Container } from 'reactstrap';\n\nimport {\n  AppAside,\n  AppFooter,\n  AppHeader,\n  AppSidebar,\n  AppSidebarFooter,\n  AppSidebarForm,\n  AppSidebarHeader,\n  AppSidebarMinimizer,\n  AppBreadcrumb2 as AppBreadcrumb,\n  AppSidebarNav2 as AppSidebarNav,\n} from '@coreui/react';\n// sidebar nav config\nimport navigation from '../../_nav';\n// routes config\nimport routes from '../../routes';\n\nimport {getAllNavRole} from '../../api/nav_role'\nimport {getOneRole} from '../../api/role'\nimport fakeAuth from '../../api/fakeAuth'\nimport Sidebar from '../Sidebar/Sidebar'\n\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\n\nclass DefaultLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roles: [],\n      nav_roles:[],\n      navigation:navigation,\n    }\n  }\n  componentWillMount(){\n    var result=[];\n    if (localStorage.getItem('nav_roles')&&localStorage.getItem('roles')){\n      let nav = localStorage.getItem('nav_roles')\n      let role = localStorage.getItem('roles')\n      this.setState({\n        nav_roles:JSON.parse(nav),\n        roles:JSON.parse(role)\n      })\n    }\n    getAllNavRole(fakeAuth.getAccessToken()).then((res) => { \n      result = res.data;\n      result.map(re=>{\n        let array = re.roles;\n        return re.roles=array\n      })\n      getOneRole(fakeAuth.getUsername(),fakeAuth.getAccessToken()).then(res=>{\n        let roleUSer = res.data?res.data.role:[\"Guest\"];\n        this.setState({\n          nav_roles:result,\n          roles:roleUSer,\n          })\n        localStorage.setItem('nav_roles',JSON.stringify(result))\n        localStorage.setItem('roles',JSON.stringify(roleUSer))\n        })\n      })\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  signOut(e) {\n    e.preventDefault()\n    this.props.history.push('/login')\n  }\n\n  appendRoleToRouter=(items, items_roles) =>{\n    var result=[...items];\n    return result.map((item, index)=>{\n      items_roles.map((itemR, index2)=>{\n          if(item.name===itemR.name){\n            item.roles=itemR.roles;\n          }\n          return itemR;\n        })\n        return item;\n    })\n  }\n\n  appendRoleToNav=(items, items_roles) =>{\n    var result=[...items];\n    return result.map((item, index)=>{\n      items_roles.map((itemR, index2)=>{\n          if(item.name===itemR.name){\n            item.roles=itemR.roles;\n          }\n          if (item.children){\n            item.children.map(child =>{\n              if (child.name === itemR.name){\n                child.roles=itemR.roles\n              }\n          })\n            \n          }\n          return itemR;\n        })\n        return item;\n    })\n  }\n  isValidRole = (userRole, rolesValid) => {\n    if (userRole.includes('Administrator'))\n      return true;\n    if(!rolesValid) {\n      return false;\n    }\n    if(!userRole) {\n      return false;\n    }\n    for (let i=0; i< rolesValid.length; i++) {\n      if (userRole.indexOf(rolesValid[i]) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    var {roles}=this.state;\n    let routesAppendRole=this.appendRoleToRouter(routes,this.state.nav_roles);\n    let retRouter= routesAppendRole.filter(route => (this.isValidRole(roles, route.roles)))\n\n    let routesAppendNav=this.appendRoleToNav(navigation.items,this.state.nav_roles);\n    console.log(routesAppendNav)\n    let retNavItems = routesAppendNav.filter(nav => (this.isValidRole(roles, nav.roles)))\n    console.log(retNavItems)\n    retNavItems.map(ele=>{\n      if (ele.children){\n        ele.children = ele.children.filter(child =>(this.isValidRole(roles, child.roles)))\n      }\n    })\n    console.log(retNavItems)\n    let retNav = {items:retNavItems}\n    return (\n      <div className=\"app\">\n        <AppHeader fixed>\n          <Suspense  fallback={this.loading()}>\n            <DefaultHeader onLogout={e=>this.signOut(e)}/>\n          </Suspense>\n        </AppHeader>\n        <div className=\"app-body\">\n          <AppSidebar fixed display=\"lg\">\n            <AppSidebarHeader />\n            <AppSidebarForm />\n            <Suspense>\n            {/* <Sidebar roles={roles} {...this.props}/> */}\n            <AppSidebarNav navConfig={retNav} {...this.props} router={router}/>\n            </Suspense>\n            <AppSidebarFooter />\n            <AppSidebarMinimizer />\n          </AppSidebar>\n          <main className=\"main\">\n            <AppBreadcrumb appRoutes={routes} router={router}/>\n            <Container fluid>\n              <Suspense fallback={this.loading()}>\n              <Switch>\n                  {retRouter\n                  // .  (route=> (this.isValidRole(roles, route.roles)))\n                  .map((route, idx) => {\n                    return route.component ? (\n                      <Route\n                        key={idx}\n                        path={route.path}\n                        exact={route.exact}\n                        name={route.name}\n                        render={props => (\n                          <route.component {...props} />\n                        )} />\n                    ) : (null);\n                  })}\n                  <Redirect from=\"/\" to=\"/dashboard\" />\n                </Switch>\n              </Suspense>\n            </Container>\n          </main>\n          {/* <AppAside fixed>\n            <Suspense fallback={this.loading()}>\n              <DefaultAside />\n            </Suspense>\n          </AppAside> */}\n        </div>\n        <AppFooter>\n          <Suspense fallback={this.loading()}>\n            <DefaultFooter />\n          </Suspense>\n        </AppFooter>\n      </div>\n    );\n  }\n}\n\nexport default DefaultLayout;\n","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {Badge, Nav, NavItem, NavLink as RsNavLink,\n} from 'reactstrap';\nimport classNames from 'classnames';\nimport nav from '../../_nav';\n//import nav_roles from './_nav_roles'\nimport {getAllNavRole} from '../../api/nav_role'\nimport fakeAuth from '../../api/fakeAuth'\nclass Sidebar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.activeRoute = this.activeRoute.bind(this);\n    this.hideMobile = this.hideMobile.bind(this);\n    this.state={\n      nav_roles:[]\n    }\n  }\n\n\n  handleClick(e) {\n    e.preventDefault();\n    e.target.parentElement.classList.toggle('open');\n  }\n\n  activeRoute(routeName, props) {\n    // return this.props.location.pathname.indexOf(routeName) > -1 ? 'nav-item nav-dropdown open' : 'nav-item nav-dropdown';\n    return props.location.pathname.indexOf(routeName) > -1 ? 'nav-item nav-dropdown open' : 'nav-item nav-dropdown';\n\n  }\n\n  hideMobile() {\n    if (document.body.classList.contains('sidebar-mobile-show')) {\n      document.body.classList.toggle('sidebar-mobile-show')\n    }\n  }\n\n  // todo Sidebar nav secondLevel\n  // secondLevelActive(routeName) {\n  //   return this.props.location.pathname.indexOf(routeName) > -1 ? \"nav nav-second-level collapse in\" : \"nav nav-second-level collapse\";\n  // }\n\n  isValidRole = (userRole, rolesValid) => {\n    if (userRole.includes('Administrator'))\n      return true;\n    if(!rolesValid) {\n      return false;\n    }\n    if(!userRole) {\n      //console.log(\"Role InValid\");\n      return false;\n    }\n\n    for (let i=0; i< rolesValid.length; i++) {\n      if (userRole.indexOf(rolesValid[i]) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n  appendRoleToNav=(items, items_roles) =>{\n    var result=[...items];\n    return result.map((item, index)=>{\n      items_roles.map((itemR, index2)=>{\n          if(item.name===itemR.name){\n            item.roles=itemR.roles;\n          }\n          return itemR;\n        })\n        return item;\n    })\n  }\n  componentWillMount(){\n    getAllNavRole(fakeAuth.getAccessToken()).then((res) => { \n      if (res){\n        let result = res.data;\n      result.map(re=>{\n        var array = re.roles;\n        return re.roles=array\n      })\n      this.setState({nav_roles:result})\n      }\n      })\n  }\n  render() {\n\n    const props = this.props;\n\n    // badge addon to NavItem\n    const badge = (badge) => {\n      if (badge) {\n        const classes = classNames( badge.class );\n        return (<Badge className={ classes } color={ badge.variant }>{ badge.text }</Badge>)\n      }\n    };\n\n    // simple wrapper for nav-title item\n    const wrapper = item => { return (item.wrapper && item.wrapper.element ? (React.createElement(item.wrapper.element, item.wrapper.attributes, item.name)): item.name ) };\n\n    // nav list section title\n    const title =  (title, key) => {\n      const classes = classNames( 'nav-title', title.class);\n      return (<li key={key} className={ classes }>{wrapper(title)} </li>);\n    };\n\n    // nav list divider\n    const divider = (divider, key) => {\n      const classes = classNames( 'divider', divider.class);\n      return (<li key={key} className={ classes }></li>);\n    };\n\n    // nav item with nav link\n    const navItem = (item, key) => {\n      const classes = {\n        item: classNames( item.class) ,\n        link: classNames( 'nav-link', item.variant ? `nav-link-${item.variant}` : ''),\n        icon: classNames( item.icon )\n      };\n      return (\n        navLink(item, key, classes)\n      )\n    };\n\n    // nav link\n    const navLink = (item, key, classes) => {\n      const url = item.url ? item.url : '';\n      return (\n        <NavItem key={key} className={classes.item}>\n          { isExternal(url) ?\n            <RsNavLink href={url} className={classes.link} active>\n              <i className={classes.icon}></i>&nbsp;&nbsp;{item.name}{badge(item.badge)}\n            </RsNavLink>\n            :\n            <NavLink to={url} className={classes.link} activeClassName=\"active\" onClick={this.hideMobile}>\n              <i className={classes.icon}></i>&nbsp;&nbsp;{item.name}{badge(item.badge)}\n            </NavLink>\n          }\n        </NavItem>\n      )\n    };\n\n    // nav dropdown\n    const navDropdown = (item, key,items_roles) => {\n      return (\n        <li key={key} className={this.activeRoute(item.url, props)}>\n          <a className=\"nav-link nav-dropdown-toggle\" href=\"/#/\" onClick={this.handleClick}><i className={item.icon}>&nbsp;</i>{item.name}</a>\n          <ul className=\"nav-dropdown-items\">\n            {navList(item.children,items_roles)}\n          </ul>\n        </li>)\n    };\n\n    // nav type\n    const navType = (item, idx,items_roles) =>\n      item.title ? title(item, idx) :\n      item.divider ? divider(item, idx) :\n      item.children ? navDropdown(item, idx,items_roles)\n                    : navItem(item, idx) ;\n    \n    // nav list\n    const navList = (items,items_roles) => {\n      items=this.appendRoleToNav(items,items_roles);\n      return items.filter(item=> (this.isValidRole(this.props.roles, item.roles))).map( (item, index) => navType(item, index,items_roles) );\n    };\n\n    const isExternal = (url) => {\n      const link = url ? url.substring(0, 4) : '';\n      return link === 'http';\n    };\n  \n    // sidebar-nav root\n    return (\n\n        <div style={{\n          overflowY: 'auto'\n        }}>\n          <nav className=\"sidebar-nav\" >\n          <Nav>\n            {navList(nav.items, this.state.nav_roles)}\n          </Nav>\n        </nav>\n        </div>\n\n    )\n  }\n}\n\nexport default Sidebar;\n","import DefaultLayout from './DefaultLayout';\n\nexport default DefaultLayout;\n","import {headers} from './init'\nimport fakeAuth from './fakeAuth'\nexport async function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'no-cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n    //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.text().then(data=>{\n    console.log(data)\n    return JSON.parse(data)}); // parses JSON response into native JavaScript objects\n}\nexport async function postDataToken(url = '', data = {},token) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization':'Bearer '+token,\n    //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.text().then(data=>{\n    console.log(data)\n    return JSON.parse(data)}); // parses JSON response into native JavaScript objects\n}\n\nfunction isJson(str) {\n  try {\n      JSON.parse(str);\n  } catch (e) {\n      return false;\n  }\n  return true;\n}\n\nexport async function postDataTokenMode(mode, url = '', data = {}, token) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: mode, // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization':'Bearer '+token,\n    //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.text().then(res=>{\n    if (isJson(res)){\n      return JSON.parse(res)\n    }else{\n      throw \"Cannot parse value not JSON\"\n    }\n  }); // parses JSON response into native JavaScript objects\n}\n\nexport async function signIn(username, password) {\n    let user = {\n      username: username,\n      code: password,\n      type: 'ga'\n    };\n\n    return postData('/api/auth',user).then((data) => {\n        console.log(data)\n        return data;// JSON data parsed by `response.json()` call\n      });\n}","import api,{headers} from './init'\nimport {postDataToken} from './fetch'\nimport swal from 'sweetalert'\nconst data = {\n  data:[\n    {\n      'id':1,\n      'name':'Dashboard',\n      'roles':['Administrator','Executive','Customer service'],\n    },\n    {\n      'id':2,\n      'name':'Events',\n      'roles':['Administrator','Executive','Customer service'],\n    },\n    {\n    'id':3,\n    'name':'NavManagement',\n    'roles':['Administrator'],\n  },\n  {\n    'id':4,\n    'name':'RoleManagement',\n    'roles':['Administrator'],\n  },\n  {\n    'id':5,\n    'name':'Add new event',\n    'roles':['Administrator'],\n  },\n  {\n    'id':6,\n    'name':'Edit',\n    'roles':['Administrator'],\n  },\n  {\n    'id':7,\n    'name':'Info',\n    'roles':['Administrator','Executive'],\n  }\n  ]\n}\nexport async function getAllNavRole(token){\n    let url='/api/nav_role'\n    return await fetch(url,{\n        method:'GET',\n        headers:{\n          Authorization:'Bearer '+token,\n        },\n    })\n    .then(res => {\n      if (res.status===200){\n        return res.json().then((data)=>{\n          data.map(ele=>{\n            ele.roles = ele.roles.split(\",\");\n          })\n          console.log(data);\n          return {data:data};\n        })\n      }\n      return data;\n    }).catch((err) => {\n      console.log(err)\n      swal(\"Thông báo\",err,\"error\")\n      return data\n    })\n}\n\nexport async function updateNavRole(data,token) {\n  console.log(data);\n  data.roles = data.roles.toString();\n  console.log(data);\n  return postDataToken('/api/nav_role/edit',data,token).then((data) => {\n      console.log(data)\n      return data;// JSON data parsed by `response.json()` call\n    });\n}\n\nexport async function createNavRole(data,token) {\n  console.log(data);\n  data.roles = data.roles.toString();\n  console.log(data);\n  return postDataToken('/api/nav_role/add',data,token).then((data) => {\n      console.log(data)\n      return data;// JSON data parsed by `response.json()` call\n    });\n}\n\nexport async function deleteNavRole(data,token) {\n  console.log(data);\n  data.roles = data.roles.toString();\n  console.log(data);\n  return postDataToken('/api/nav_role/delete',data,token).then((data) => {\n      console.log(data)\n      return data;// JSON data parsed by `response.json()` call\n    });\n}","\nimport {postDataToken} from './fetch'\nimport fakeAuth from './fakeAuth';\n\nconst data = {\n  data: [\n    {\n      'id': '1',\n      'name': 'ADMIN',\n      'username': 'ADMIN',\n      'role': 'Administrator',\n      'status': 'ON'\n    }, {\n      'id': '2',\n      'name': 'Lê Thành Công',\n      'username': 'conglt',\n      'role': 'Administrator',\n      'status': 'OFF'\n    }, {\n      'id': '3',\n      'name': 'Bùi Mạnh Cường',\n      'username': 'cuongbm2',\n      'role': 'Executive',\n      'status': 'ON'\n    }, {\n      'id': '4',\n      'name': 'Nguyễn Hữu Phong',\n      'username': 'phongnh',\n      'role': 'Executive',\n      'status': 'ON'\n    }\n  ]\n}\n\nexport async function getAllRole(token) {\n  let url = '/api/roles'\n  return await fetch(url, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  }).then(response => {\n    let res = response\n    res.data = []\n    if (response.status !== 200) {\n      console.log(\"URL: \" + url + \" \" + response.status + \" \" + response.statusText)\n      res.data = data.data\n      fakeAuth.signout(() => {})\n      return res\n    }\n    if (response.status === 200) {\n      console.log(\"URL: \" + url + \" 200 OK\")\n      return response\n        .json()\n        .then(data => {\n          console.log(data)\n          res.data = data;\n          return res;\n        })\n    }\n\n    return res\n  }).catch(() => {\n    console.log(\"Can’t access \" + url + \" response. Blocked by browser?\")\n    return {};\n  })\n}\n\nexport async function getOneRole(username, token) {\n  let url = '/api/get_role/' + username;\n  return await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => {\n    let res = response\n    res.data = []\n    if (response.status !== 200) {\n      console.log(\"URL: \" + url + \" \" + response.status + \" \" + response.statusText)\n      res.data = {\n        role: [\"Guest\"]\n      }\n      fakeAuth.signout(() => {});\n      return res\n    }\n    if (response.status === 200) {\n      console.log(\"URL: \" + url + \" 200 OK\")\n      return response\n        .json()\n        .then(data => {\n          console.log(data)\n          if (data.length === 0 || data[0].status === 'OFF') {\n            res.data = {\n              role: [\"Guest\"]\n            }\n          } else {\n            res.data = {\n              role: data[0]\n                .role\n                .split(\",\")\n            }\n          }\n          return res;\n        })\n    }\n    return res\n  }).catch(() => {\n    console.log(\"Can’t access \" + url + \" response. Blocked by browser?\")\n    return {};\n  })\n}\n\nexport async function updateUserRole(data, token) {\n  return postDataToken('/api/roles/edit', data, token).then((data) => {\n    console.log(data)\n    return data;\n  });\n}\n\nexport async function createUserRole(data, token) {\n  return postDataToken('/api/roles/add', data, token).then((data) => {\n    console.log(data)\n    return data;\n  });\n}\n\nexport async function deleteUserRole(data, token){\n  return postDataToken('/api/roles/delete', data, token).then((data) => {\n    console.log(data)\n    return data;\n  });\n}","import axios from 'axios'\nimport fakeAuth from './fakeAuth'\nimport {host,port} from '../config/api'\n// Create an axios instance\nconst api = axios.create({\n  baseURL: host+':'+port+'/api/',\n  headers: {\n    'Authorization': 'Bearer '+fakeAuth.getAccessToken(),\n  }\n})\n\nexport const headers = {\n  'Authorization': 'Bearer '+fakeAuth.getAccessToken(),\n}\n\nexport default api","export default {\n  items: [\n    {\n      name: 'Dashboard',\n      url: '/dashboard',\n      icon: 'icon-speedometer',\n    },\n    {\n      name: 'Events',\n      icon: 'icon-equalizer',\n      children: [\n      {\n        name: 'Events',\n        url: '/events',\n        icon: 'icon-puzzle',\n        badge: {\n          variant: 'info',\n          text: 'MAIN',\n        },\n      },\n      {\n        name: 'Domains',\n        url: '/domains',\n        icon: 'icon-puzzle',\n      },\n      {\n        name: 'Profiles',\n        url: '/profiles',\n        icon: 'icon-puzzle',\n      },\n      {\n        name: 'Tiers',\n        url: '/tiers',\n        icon: 'icon-puzzle',\n      },\n      {\n        name: 'Rules',\n        url: '/rules',\n        icon: 'icon-puzzle',\n      },\n      {\n        name: 'Conditions',\n        url: '/conditions',\n        icon: 'icon-energy',\n      },\n      {\n        name: 'Sources',\n        url: '/sources',\n        icon: 'icon-layers',\n      },\n      {\n        name: 'InfoCode',\n        url: '/info-code',\n        icon: 'icon-info',\n      },\n      {\n        name: 'ActionCode',\n        url: '/action-code',\n        icon: 'icon-rocket',\n      },\n      {\n        name: 'Clients',\n        url: '/clients',\n        icon: 'icon-people',\n      },\n      {\n        name: 'DataDefinitions',\n        url: '/data-definitions',\n        icon: 'icon-grid',\n      },\n      {\n        name: 'AccumulationKeys',\n        url: '/accumulation-keys',\n        icon: 'icon-diamond',\n      }\n    ]\n    },\n    {\n      name: 'CheckAccumulation',\n      url: '/check-accumulation',\n      icon: 'icon-star',\n    },\n    {\n      name: 'ManualData',\n      url: '/manual-data',\n      icon: 'icon-notebook',\n    },\n    {\n      name: 'ReloadConfig',\n      url: '/reload-config',\n      icon: 'icon-refresh',\n    },\n    {\n      name: 'RoleManagement',\n      url: '/role-management',\n      icon: 'icon-user',\n    },\n    {\n      name: 'NavManagement',\n      url: '/nav-management',\n      icon: 'icon-compass',\n    },\n  ],\n};\n","import React from 'react';\n\n// const Breadcrumbs = React.lazy(() => import('./views/Base/Breadcrumbs'));\n// const Cards = React.lazy(() => import('./views/Base/Cards'));\n// const Carousels = React.lazy(() => import('./views/Base/Carousels'));\n// const Collapses = React.lazy(() => import('./views/Base/Collapses'));\n// const Dropdowns = React.lazy(() => import('./views/Base/Dropdowns'));\n// const Forms = React.lazy(() => import('./views/Base/Forms'));\n// const Jumbotrons = React.lazy(() => import('./views/Base/Jumbotrons'));\n// const ListGroups = React.lazy(() => import('./views/Base/ListGroups'));\n// const Navbars = React.lazy(() => import('./views/Base/Navbars'));\n// const Navs = React.lazy(() => import('./views/Base/Navs'));\n// const Paginations = React.lazy(() => import('./views/Base/Paginations'));\n// const Popovers = React.lazy(() => import('./views/Base/Popovers'));\n// const ProgressBar = React.lazy(() => import('./views/Base/ProgressBar'));\n// const Switches = React.lazy(() => import('./views/Base/Switches'));\n// const Tables = React.lazy(() => import('./views/Base/Tables'));\n// const Tabs = React.lazy(() => import('./views/Base/Tabs'));\n// const Tooltips = React.lazy(() => import('./views/Base/Tooltips'));\n// const BrandButtons = React.lazy(() => import('./views/Buttons/BrandButtons'));\n// const ButtonDropdowns = React.lazy(() => import('./views/Buttons/ButtonDropdowns'));\n// const ButtonGroups = React.lazy(() => import('./views/Buttons/ButtonGroups'));\n// const Buttons = React.lazy(() => import('./views/Buttons/Buttons'));\n// const Charts = React.lazy(() => import('./views/Charts'));\n// const CoreUIIcons = React.lazy(() => import('./views/Icons/CoreUIIcons'));\n// const Flags = React.lazy(() => import('./views/Icons/Flags'));\n// const FontAwesome = React.lazy(() => import('./views/Icons/FontAwesome'));\n// const SimpleLineIcons = React.lazy(() => import('./views/Icons/SimpleLineIcons'));\n// const Alerts = React.lazy(() => import('./views/Notifications/Alerts'));\n// const Badges = React.lazy(() => import('./views/Notifications/Badges'));\n// const Modals = React.lazy(() => import('./views/Notifications/Modals'));\n// const Colors = React.lazy(() => import('./views/Theme/Colors'));\n// const Typography = React.lazy(() => import('./views/Theme/Typography'));\n// const Widgets = React.lazy(() => import('./views/Widgets/Widgets'));\n// const Users = React.lazy(() => import('./views/Users/Users'));\n// const User = React.lazy(() => import('./views/Users/User'));\n\nconst Dashboard = React.lazy(() => import('./views/Dashboard'));\n\nconst Events = React.lazy(() => import('./views/Events/Events'));\nconst Event = React.lazy(() => import('./views/Events/Event'));\nconst EditEvent = React.lazy(() => import('./views/Events/EditEvent'));\nconst NewEvent = React.lazy(() => import('./views/Events/NewEvent'));\n\nconst RoleManagement = React.lazy(() => import('./components/RoleManagement'));\nconst NavManagement = React.lazy(() => import('./components/NavManagement'));\nconst SourcesManagement = React.lazy(() => import('./components/SourcesManagement'));\nconst RulesManagement = React.lazy(() => import('./components/RulesManagement'));\nconst RuleInfo = React.lazy(() => import('./components/RuleInfo'));\nconst SourceInfo = React.lazy(() => import('./components/SourceInfo'));\nconst DomainManagement = React.lazy(()=> import('./components/DomainManagement'));\nconst DomainInfo = React.lazy(()=> import('./components/DomainInfo'));\nconst ProfileManagement = React.lazy(()=> import('./components/ProfileManagement'));\nconst ProfileInfo = React.lazy(()=> import('./components/ProfileInfo'));\nconst TierManagement = React.lazy(()=> import('./components/TierManagement'));\nconst TierInfo = React.lazy(()=> import('./components/TierInfo'));\nconst RuleVersionInfo = React.lazy(()=> import('./components/RuleVersionInfo'));\n\nconst DataDefinitions = React.lazy(() => import('./components/DataDefinitions'));\nconst DataDefinitionsInfo = React.lazy(() => import('./components/DataDefinitionsInfo'));\nconst AccumulationKeys = React.lazy(() => import('./components/AccumulationKeys'));\n\nconst ReloadConfig = React.lazy(() => import('./components/ReloadConfig'));\n\n\nconst ClientManagement = React.lazy(()=> import('./components/ClientManagement'));\nconst ClientInfo = React.lazy(()=> import('./components/ClientInfo'));\nconst ConditionManagement = React.lazy(()=> import('./components/ConditionManagement'));\nconst ConditionInfo = React.lazy(()=> import('./components/ConditionInfo'));\nconst InfoCodeManagement = React.lazy(()=> import('./components/InfoCodeManagement'));\nconst InfoCodeInfo = React.lazy(()=> import('./components/InfoCodeInfo'));\n\nconst ActionCodeManagement = React.lazy(()=> import('./components/ActionCodeManagement'));\nconst ActionCodeInfo = React.lazy(()=> import('./components/ActionCodeInfo'));\n\n\nconst CheckAccumulation = React.lazy(()=> import('./components/CheckAccumulation'));\nconst ManualData = React.lazy(()=> import('./components/ManualData'));\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/events', exact: true,name: 'Events', component: Events },\n  { path: '/events/event/add', exact: true, name: 'Add new event', component: NewEvent },\n  { path: '/events/:id/edit', exact: true, name: 'Edit', component: EditEvent },\n  { path: '/events/:id', exact: true, name: 'Info', component: Event },\n\n  { path: '/domains', exact: true, name: 'Domains', component: DomainManagement },\n  { path: '/domains/:id', exact: true, name: 'DomainInfo', component: DomainInfo },\n  { path: '/profiles', exact: true, name: 'Profiles', component: ProfileManagement },\n  { path: '/profiles/:id', exact: true, name: 'ProfileInfo', component: ProfileInfo },\n  { path: '/tiers', exact: true, name: 'Tiers', component: TierManagement },\n  { path: '/tiers/:id', exact: true, name: 'TierInfo', component: TierInfo },\n  { path: '/conditions', exact: true, name: 'Conditions', component: ConditionManagement },\n  { path: '/conditions/:id', exact: true, name: 'ConditionInfo', component: ConditionInfo },\n\n  { path: '/info-code', exact: true, name: 'InfoCode', component: InfoCodeManagement },\n  { path: '/info-code/:id', exact: true, name: 'InfoCodeInfo', component: InfoCodeInfo },\n\n  { path: '/action-code', exact: true, name: 'ActionCode', component: ActionCodeManagement },\n  { path: '/action-code/:id', exact: true, name: 'ActionCodeInfo', component: ActionCodeInfo },\n\n  { path: '/clients', exact: true, name: 'Clients', component: ClientManagement },\n  { path: '/clients/:id', exact: true, name: 'ClientInfo', component: ClientInfo },\n\n  { path: '/rules', exact: true, name: 'Rules', component: RulesManagement },\n  { path: '/rules/:id', exact: true, name: 'RuleInfo', component: RuleInfo },\n  { path: '/ruleVersions/:id', exact: true, name: 'RuleVersionInfo', component: RuleVersionInfo },\n\n  { path: '/sources', exact: true, name: 'Sources', component: SourcesManagement },\n  { path: '/sources/:id', exact: true, name: 'SourceInfo', component: SourceInfo },\n  { path: '/data-definitions', exact: true, name: 'DataDefinitions', component: DataDefinitions },\n  { path: '/accumulation-keys', exact: true, name: 'AccumulationKeys', component: AccumulationKeys },\n  { path: '/check-accumulation', exact: true, name: 'CheckAccumulation', component: CheckAccumulation },\n  { path: '/manual-data', exact: true, name: 'ManualData', component: ManualData },\n\n  { path: '/reload-config', exact: true, name: 'ReloadConfig', component: ReloadConfig },\n\n\n  // { path: '/data-definitions/:id', exact: true, name: 'DataDefinitionsInfo', component: DataDefinitionsInfo },\n  { path: '/role-management', name: 'RoleManagement', component: RoleManagement},\n  { path: '/nav-management', name: 'NavManagement', component: NavManagement},\n\n  // { path: '/theme', exact: true, name: 'Theme', component: Colors },\n  // { path: '/theme/colors', name: 'Colors', component: Colors },\n  // { path: '/theme/typography', name: 'Typography', component: Typography },\n  // { path: '/base', exact: true, name: 'Base', component: Cards },\n  // { path: '/base/cards', name: 'Cards', component: Cards },\n  // { path: '/base/forms', name: 'Forms', component: Forms },\n  // { path: '/base/switches', name: 'Switches', component: Switches },\n  // { path: '/base/tables', name: 'Tables', component: Tables },\n  // { path: '/base/tabs', name: 'Tabs', component: Tabs },\n  // { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  // { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  // { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  // { path: '/base/dropdowns', name: 'Dropdowns', component: Dropdowns },\n  // { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\n  // { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  // { path: '/base/navbars', name: 'Navbars', component: Navbars },\n  // { path: '/base/navs', name: 'Navs', component: Navs },\n  // { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  // { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  // { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\n  // { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  // { path: '/buttons', exact: true, name: 'Buttons', component: Buttons },\n  // { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  // { path: '/buttons/button-dropdowns', name: 'Button Dropdowns', component: ButtonDropdowns },\n  // { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  // { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\n  // { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  // { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  // { path: '/icons/flags', name: 'Flags', component: Flags },\n  // { path: '/icons/font-awesome', name: 'Font Awesome', component: FontAwesome },\n  // { path: '/icons/simple-line-icons', name: 'Simple Line Icons', component: SimpleLineIcons },\n  // { path: '/notifications', exact: true, name: 'Notifications', component: Alerts },\n  // { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  // { path: '/notifications/badges', name: 'Badges', component: Badges },\n  // { path: '/notifications/modals', name: 'Modals', component: Modals },\n  // { path: '/widgets', name: 'Widgets', component: Widgets },\n  // { path: '/charts', name: 'Charts', component: Charts },\n  // { path: '/users', exact: true,  name: 'Users', component: Users },\n  // { path: '/users/:id', exact: true, name: 'User Details', component: User },\n];\n\nexport default routes;\n"],"sourceRoot":""}