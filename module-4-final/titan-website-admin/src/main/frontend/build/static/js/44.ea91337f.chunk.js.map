{"version":3,"sources":["components/SourceInfo.js","../node_modules/reactstrap/es/Table.js","api/source.js"],"names":["sourceTypeCode","User","props","componentWillMount","getSources","fakeAuth","getAccessToken","then","res","console","log","data","list","setState","renderTable","responsive","hover","undefined","Object","keys","length","map","ele","scope","eleChild","index","key","field","width","id","message","description","Fragment","className","moment","format","toString","state","source","this","find","rule","match","params","lg","striped","dataSource","Component","propTypes","PropTypes","string","cssModule","object","size","bordered","bool","borderless","dark","oneOfType","tag","tagPropType","responsiveTag","innerRef","func","Table","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","React","createElement","_extends","ref","responsiveClassName","defaultProps","createSource","token","a","postDataTokenMode","status","editSource","conId","deleteSource","page","url","fetch","method","headers","Authorization","response","statusText","swal","json","catch"],"mappings":"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","file":"static/js/44.ea91337f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\n\nimport usersData from '../views/Users/UsersData'\nimport fakeAuth from '../api/fakeAuth'\nimport {getSources} from '../api/source'\nimport moment from 'moment'\n\nconst sourceTypeCode={\n  '0':'[0] INTERNAL',\n  '1':'[1] REQUEST',\n  '2':'[2] HTTP',\n  '3':'[3] GRPC',\n  '4':'[4] REDIS',\n  '5':'[5] MYSQL',\n  '6':'[6] MONGODB'\n}\nclass User extends Component {\n\n  constructor(props){\n      super(props);\n      this.state={\n        data:[],\n      }\n  }\n\n  componentWillMount=()=>{\n    getSources(fakeAuth.getAccessToken(),0,1000).then(res=>{\n       console.log(res.data.list)\n       if (res.data && res.data.list){\n        this.setState({\n            data:res.data.list\n        })\n       }\n    })\n}\nrenderTable=(list)=>{\n    return(<Table responsive hover>\n        <thead>\n            <tr>\n            {list!==undefined?Object.keys(list).length>0?\n            Object.keys(list[0]).map(ele=>{\n                if (ele==='latestVersion'){\n                    return (\n                    <>\n                    <th scope='row'>\n                    latestVersionId\n                    </th>\n                    {Object.keys(list[0][ele]).map(eleChild=>(\n                        <td scope='row'>\n                        {eleChild}\n                        </td>\n                    ))}\n                    </>\n                    )\n                }\n                else if (ele!=='isChoose'){\n                    return (<th scope=\"col\">{ele}</th>)\n                }\n            }):<th></th>\n            :<th></th>}\n            </tr>\n        </thead>\n        <tbody>\n        {list !== undefined ? list.map((ele,index)=>(\n            <tr key={index}\n            \n            >\n            {Object.keys(ele).length>0?Object.keys(ele).map(field=>{\n                if (field === 'infoCode'){\n                    return (<td scope='row' width=\"20%\">\n                        [{ele[field].id}] {ele[field].message} - {ele[field].description}\n                    </td>)\n                }\n                else if (field==='latestVersion'){\n                    return (\n                    <React.Fragment>\n                    <td scope='row'>\n                    {/* {ele[field].id} */}\n                    <i className=\"fa fa-arrow-right\"></i>\n                    </td>\n                    {Object.keys(ele[field]).map(eleChild=>{\n                        if (eleChild === 'createdAt'){\n                            return(\n                                <td scope='row'>\n                        {moment(ele[field][eleChild]).format('lll')}\n                        </td>\n                            )\n                        }else{\n                           return (\n                            <td scope='row'>\n                            {ele[field][eleChild]?ele[field][eleChild].toString():\"null\"}\n                            </td>\n                           )\n                        }\n                })}\n                    </React.Fragment>\n                    )\n                }\n                else if (field === 'createdAt'){\n                    return (<td scope=\"row\">\n                    {moment(ele[field]).format('lll')}\n                    </td>)\n                }\n                else if (field!=='isChoose'){\n                    return (<td scope=\"row\">\n                    {ele[field]}\n                    </td>)\n                }\n            }):<th></th>}\n            </tr>\n        )):<tr></tr>}\n        </tbody>\n    </Table>)\n}\n\n  render() {\n    const sourcesData = this.state.data;\n    const source = sourcesData.find( rule => rule.id.toString() === this.props.match.params.id)\n    console.log(source)\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col lg={6}>\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>Source id: {this.props.match.params.id}</strong>\n              </CardHeader>\n              <CardBody>\n                  <Table responsive striped hover>\n                    <tbody>\n                      {\n                        source?Object.keys(source).map(key => {\n                        if (key === 'createdAt')\n                        {\n                            return (\n                                <tr key={key}>\n                                  <td>{`${key}:`}</td>\n                                  <td><strong>{moment(source[key]).format('lll')}</strong></td>\n                                </tr>\n                              )\n                        }\n                        else if (key === 'type')\n                        {\n                            return (\n                                <tr key={key}>\n                                  <td>{`${key}:`}</td>\n                                  <td><strong>{sourceTypeCode[source[key]]}</strong></td>\n                                </tr>\n                              )\n                        }\n                        else if (key!=='dataSource'){\n                            return (\n                                <tr key={key}>\n                                  <td>{`${key}:`}</td>\n                                  <td><strong>{source[key]!==undefined?source[key].toString():\"undefined\"}</strong></td>\n                                </tr>\n                              )\n                        }else{\n                            return (<tr></tr>)\n                        }\n                        }\n                            ):<tr></tr>\n                      }\n                    </tbody>\n                  </Table>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={6}>\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>Data source</strong>\n              </CardHeader>\n              <CardBody>\n                  <Table responsive striped hover>\n                    <tbody>\n                      {\n                        source&&source.dataSource?Object.keys(source.dataSource).map(key => {\n                        return (\n                                  <tr key={key}>\n                                    <td>{`${key}:`}</td>\n                                    <td><strong>{source.dataSource[key]!==undefined?source.dataSource[key].toString():\"undefined\"}</strong></td>\n                                  </tr>\n                                )\n                          }):<tr></tr>\n                      }\n                    </tbody>\n                  </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n      </div>\n    )\n  }\n}\n\nexport default User;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import fakeAuth from './fakeAuth'\nimport {postDataTokenMode} from './fetch'\nimport swal from 'sweetalert'\nexport async function createSource(data, token) {\n    return await postDataTokenMode('POST','/api/sourceConfigs', data, token).then((data) => {\n        console.log(data)\n        if (data.status && data.status!==200){\n            throw data.message;\n        }\n        return data;// JSON data parsed by `response.json()` call\n      });\n}\n\nexport async function editSource(conId, data, token) {\n    return await postDataTokenMode('PUT','/api/sourceConfigs/'+conId, data, token).then((data) => {\n        console.log(data)\n        return data;// JSON data parsed by `response.json()` call\n      });\n}\n\nexport async function deleteSource(conId, data, token) {\n    return await postDataTokenMode('DELETE','/api/sourceConfigs/'+conId, data, token).then((data) => {\n        console.log(data)\n        return data;// JSON data parsed by `response.json()` call\n      });\n}\n\nexport async function getSources(token,page,size){\n    let url='/api/sourceConfigs?page='+page+'&size='+size\n    return await fetch(url,{\n        method:'GET',\n        headers:{\n            Authorization:'Bearer '+token,\n        },\n    })\n    .then(response => {\n        let res = response\n        res.data = []\n        if (response.status!==200){\n            console.log(\"URL: \" + url +\" \"+response.status+ \" \"+response.statusText)\n            // fakeAuth.signout(()=>{})\n            swal(\"Thông báo\",response.status+ \" \"+response.statusText,\"error\")\n\n            return res\n        }\n        if (response.status===200){\n            console.log(\"URL: \" + url + \" 200 OK\")\n            return response.json().then(data=>{\n                res.data = data;\n                return res;\n            })\n        }\n\n        return res\n    })\n    .catch(() => {\n        console.log(\"Can’t access \" + url + \" response. Blocked by browser?\")\n        return {};\n    })\n}"],"sourceRoot":""}