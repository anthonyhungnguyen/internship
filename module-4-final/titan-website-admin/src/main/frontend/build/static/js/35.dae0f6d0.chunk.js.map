{"version":3,"sources":["views/Pages/Login/Login.js","api/fetch.js","api/nav_role.js","api/role.js","api/init.js"],"names":["Login","props","handleSubmit","event","preventDefault","elements","target","username","value","password","state","activeTab","signIn","then","data","status","console","log","fakeAuth","authenticate","token","setState","redirectToReferrer","swal","login","username2","password2","loginDataToken","res","catch","err","toggle","bind","Array","fill","className","addonType","type","name","placeholder","autoComplete","tabPane","tab","newArray","this","slice","tabId","vnglogin","databaselogin","isAuthenticated","to","md","onSubmit","color","tabs","active","onClick","xs","Component","postData","a","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","text","parse","postDataToken","isJson","str","e","postDataTokenMode","user","code","getAllNavRole","Authorization","json","map","ele","roles","split","updateNavRole","toString","createNavRole","getAllRole","statusText","signout","getOneRole","role","length","updateUserRole","createUserRole","deleteUserRole","axios","create","baseURL","host","getAccessToken"],"mappings":"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","file":"static/js/35.dae0f6d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, \n  Container, Form, Input, InputGroup, InputGroupAddon, \n  InputGroupText ,Nav, NavItem, NavLink,\n  TabPane, Row, TabContent,Badge} from 'reactstrap';\n\nimport {loginDataToken} from '../../../api/auth'\nimport {signIn} from '../../../api/fetch'\nimport fakeAuth from '../../../api/fakeAuth'\nimport {getOneRole} from '../../../api/role'\nimport {getAllNavRole} from '../../../api/nav_role'\nimport swal from 'sweetalert';\n\nclass Login extends Component {\n  constructor(props){\n    super(props)\n    this.toggle = this.toggle.bind(this);\n\n    this.state = { redirectToReferrer: false,\n    activeTab: new Array(4).fill('1') };\n  }\n  vnglogin() {\n    return (\n    <div>\n      <InputGroup className=\"mb-3 magintop20\">\n    <InputGroupAddon addonType=\"prepend\">\n      <InputGroupText>\n        <i className=\"icon-user\"></i>\n      </InputGroupText>\n    </InputGroupAddon>\n    <Input type=\"text\" name=\"username\" placeholder=\"Username\" autoComplete=\"username\" />\n  </InputGroup>\n  <InputGroup className=\"mb-4\">\n    <InputGroupAddon addonType=\"prepend\">\n      <InputGroupText>\n        <i className=\"icon-lock\"></i>\n      </InputGroupText>\n    </InputGroupAddon>\n    <Input type=\"password\" name=\"password\" placeholder=\"Password + OTP\" autoComplete=\"current-password\" />\n  </InputGroup>\n  </div>)\n  }\n  databaselogin() {\n    return (\n    <div>\n      <InputGroup className=\"mb-3 magintop20\">\n    <InputGroupAddon addonType=\"prepend\">\n      <InputGroupText>\n        <i className=\"icon-user\"></i>\n      </InputGroupText>\n    </InputGroupAddon>\n    <Input type=\"text\" name=\"username2\" placeholder=\"Username\" autoComplete=\"username\" />\n  </InputGroup>\n  <InputGroup className=\"mb-4\">\n    <InputGroupAddon addonType=\"prepend\">\n      <InputGroupText>\n        <i className=\"icon-lock\"></i>\n      </InputGroupText>\n    </InputGroupAddon>\n    <Input type=\"password\" name=\"password2\" placeholder=\"Password\" autoComplete=\"current-password\" />\n  </InputGroup>\n  </div>)\n  }\n  toggle(tabPane, tab) {\n    const newArray = this.state.activeTab.slice()\n    newArray[tabPane] = tab\n    this.setState({\n      activeTab: newArray,\n    });\n  }\n\n  tabPane() {\n    return (\n      <>\n        <TabPane tabId=\"1\">\n          {this.vnglogin()}\n        </TabPane>\n        <TabPane tabId=\"2\">\n          {this.databaselogin()}\n        </TabPane>\n      </>\n    );\n  }\n  handleSubmit=(event)=>{   \n    event.preventDefault();\n    const elements = event.target.elements\n    const username = elements.username.value\n    const password = elements.password.value\n    const tab=this.state.activeTab[0];\n    if(tab==='1'){\n      signIn(username, password).then(data=>{\n        if(data.status ===\"true\"){\n          console.log(data)\n          fakeAuth.authenticate(username,data.token);\n          this.setState({ redirectToReferrer: true });\n        }else{\n          swal(\"Thông báo!\", \"Đăng nhập không thành công!\", \"error\");\n        }\n      })\n    }else{\n      let login={\n        username:elements.username2.value,\n        password:elements.password2.value\n      };\n      loginDataToken(login).then(res=>{\n\n          if(res.status===200){\n            fakeAuth.authenticate(res.data.username,res.data.token);\n             this.setState({ redirectToReferrer: true });\n                // loginDataBase(login).then(ret=>{\n                // if(ret.data.status ===\"true\"){\n                //   fakeAuth.authenticate(ret.data.username,ret.data.role);\n                //   this.setState({ redirectToReferrer: true });\n                // }else{\n                //   swal(\"Thông báo!\", \"Đăng nhập không thành công!\", \"error\");\n                // }\n            //})\n          }\n\n      }).catch(err=>{\n        swal(\"Thông báo!\", \"Đăng nhập không thành công!\", \"error\");\n      })\n\n  }\n}\n  componentWillMount(){\n    if(fakeAuth.isAuthenticated()) this.setState({ redirectToReferrer: true });\n  }\n  render() {\n   \n    let { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) return <Redirect to={\"/\"} />;\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container >\n          <Row className=\"justify-content-center\">\n            <Col md=\"5\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form onSubmit={this.handleSubmit}>\n                      <h1>TITAN <Badge color=\"danger\">ADMIN</Badge></h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <Nav tabs>\n                      <NavItem>\n                        <NavLink\n                          active={this.state.activeTab[0] === '1'}\n                          onClick={() => { this.toggle(0, '1'); }}\n                        >\n                          VNG TOKEN GATEWAY\n                        </NavLink>\n                      </NavItem>\n                      \n                    </Nav>\n                    <TabContent activeTab={this.state.activeTab[0]}>\n                    {this.tabPane()}\n                    </TabContent>\n                      \n                      <Row className=\"marginTop20\">\n                      <Col xs=\"6\" className=\"text-left\">\n                        {/* <Button type=\"reset\" color=\"primary\" className=\"px-4\">Reset</Button> */}\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button type=\"submit\" color=\"primary\" className=\"px-4\">Login</Button>\n                        </Col>\n                        \n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default Login;\n","import {headers} from './init'\nimport fakeAuth from './fakeAuth'\nexport async function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'no-cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n    //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.text().then(data=>{\n    console.log(data)\n    return JSON.parse(data)}); // parses JSON response into native JavaScript objects\n}\nexport async function postDataToken(url = '', data = {},token) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization':'Bearer '+token,\n    //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.text().then(data=>{\n    console.log(data)\n    return JSON.parse(data)}); // parses JSON response into native JavaScript objects\n}\n\nfunction isJson(str) {\n  try {\n      JSON.parse(str);\n  } catch (e) {\n      return false;\n  }\n  return true;\n}\n\nexport async function postDataTokenMode(mode, url = '', data = {}, token) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: mode, // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization':'Bearer '+token,\n    //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.text().then(res=>{\n    if (isJson(res)){\n      return JSON.parse(res)\n    }else{\n      throw \"Cannot parse value not JSON\"\n    }\n  }); // parses JSON response into native JavaScript objects\n}\n\nexport async function signIn(username, password) {\n    let user = {\n      username: username,\n      code: password,\n      type: 'ga'\n    };\n\n    return postData('/api/auth',user).then((data) => {\n        console.log(data)\n        return data;// JSON data parsed by `response.json()` call\n      });\n}","import api,{headers} from './init'\nimport {postDataToken} from './fetch'\nimport swal from 'sweetalert'\nconst data = {\n  data:[\n    {\n      'id':1,\n      'name':'Dashboard',\n      'roles':['Administrator','Executive','Customer service'],\n    },\n    {\n      'id':2,\n      'name':'Events',\n      'roles':['Administrator','Executive','Customer service'],\n    },\n    {\n    'id':3,\n    'name':'NavManagement',\n    'roles':['Administrator'],\n  },\n  {\n    'id':4,\n    'name':'RoleManagement',\n    'roles':['Administrator'],\n  },\n  {\n    'id':5,\n    'name':'Add new event',\n    'roles':['Administrator'],\n  },\n  {\n    'id':6,\n    'name':'Edit',\n    'roles':['Administrator'],\n  },\n  {\n    'id':7,\n    'name':'Info',\n    'roles':['Administrator','Executive'],\n  }\n  ]\n}\nexport async function getAllNavRole(token){\n    let url='/api/nav_role'\n    return await fetch(url,{\n        method:'GET',\n        headers:{\n          Authorization:'Bearer '+token,\n        },\n    })\n    .then(res => {\n      if (res.status===200){\n        return res.json().then((data)=>{\n          data.map(ele=>{\n            ele.roles = ele.roles.split(\",\");\n          })\n          console.log(data);\n          return {data:data};\n        })\n      }\n      return data;\n    }).catch((err) => {\n      console.log(err)\n      swal(\"Thông báo\",err,\"error\")\n      return data\n    })\n}\n\nexport async function updateNavRole(data,token) {\n  console.log(data);\n  data.roles = data.roles.toString();\n  console.log(data);\n  return postDataToken('/api/nav_role/edit',data,token).then((data) => {\n      console.log(data)\n      return data;// JSON data parsed by `response.json()` call\n    });\n}\n\nexport async function createNavRole(data,token) {\n  console.log(data);\n  data.roles = data.roles.toString();\n  console.log(data);\n  return postDataToken('/api/nav_role/add',data,token).then((data) => {\n      console.log(data)\n      return data;// JSON data parsed by `response.json()` call\n    });\n}\n\nexport async function deleteNavRole(data,token) {\n  console.log(data);\n  data.roles = data.roles.toString();\n  console.log(data);\n  return postDataToken('/api/nav_role/delete',data,token).then((data) => {\n      console.log(data)\n      return data;// JSON data parsed by `response.json()` call\n    });\n}","\nimport {postDataToken} from './fetch'\nimport fakeAuth from './fakeAuth';\n\nconst data = {\n  data: [\n    {\n      'id': '1',\n      'name': 'ADMIN',\n      'username': 'ADMIN',\n      'role': 'Administrator',\n      'status': 'ON'\n    }, {\n      'id': '2',\n      'name': 'Lê Thành Công',\n      'username': 'conglt',\n      'role': 'Administrator',\n      'status': 'OFF'\n    }, {\n      'id': '3',\n      'name': 'Bùi Mạnh Cường',\n      'username': 'cuongbm2',\n      'role': 'Executive',\n      'status': 'ON'\n    }, {\n      'id': '4',\n      'name': 'Nguyễn Hữu Phong',\n      'username': 'phongnh',\n      'role': 'Executive',\n      'status': 'ON'\n    }\n  ]\n}\n\nexport async function getAllRole(token) {\n  let url = '/api/roles'\n  return await fetch(url, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  }).then(response => {\n    let res = response\n    res.data = []\n    if (response.status !== 200) {\n      console.log(\"URL: \" + url + \" \" + response.status + \" \" + response.statusText)\n      res.data = data.data\n      fakeAuth.signout(() => {})\n      return res\n    }\n    if (response.status === 200) {\n      console.log(\"URL: \" + url + \" 200 OK\")\n      return response\n        .json()\n        .then(data => {\n          console.log(data)\n          res.data = data;\n          return res;\n        })\n    }\n\n    return res\n  }).catch(() => {\n    console.log(\"Can’t access \" + url + \" response. Blocked by browser?\")\n    return {};\n  })\n}\n\nexport async function getOneRole(username, token) {\n  let url = '/api/get_role/' + username;\n  return await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => {\n    let res = response\n    res.data = []\n    if (response.status !== 200) {\n      console.log(\"URL: \" + url + \" \" + response.status + \" \" + response.statusText)\n      res.data = {\n        role: [\"Guest\"]\n      }\n      fakeAuth.signout(() => {});\n      return res\n    }\n    if (response.status === 200) {\n      console.log(\"URL: \" + url + \" 200 OK\")\n      return response\n        .json()\n        .then(data => {\n          console.log(data)\n          if (data.length === 0 || data[0].status === 'OFF') {\n            res.data = {\n              role: [\"Guest\"]\n            }\n          } else {\n            res.data = {\n              role: data[0]\n                .role\n                .split(\",\")\n            }\n          }\n          return res;\n        })\n    }\n    return res\n  }).catch(() => {\n    console.log(\"Can’t access \" + url + \" response. Blocked by browser?\")\n    return {};\n  })\n}\n\nexport async function updateUserRole(data, token) {\n  return postDataToken('/api/roles/edit', data, token).then((data) => {\n    console.log(data)\n    return data;\n  });\n}\n\nexport async function createUserRole(data, token) {\n  return postDataToken('/api/roles/add', data, token).then((data) => {\n    console.log(data)\n    return data;\n  });\n}\n\nexport async function deleteUserRole(data, token){\n  return postDataToken('/api/roles/delete', data, token).then((data) => {\n    console.log(data)\n    return data;\n  });\n}","import axios from 'axios'\nimport fakeAuth from './fakeAuth'\nimport {host,port} from '../config/api'\n// Create an axios instance\nconst api = axios.create({\n  baseURL: host+':'+port+'/api/',\n  headers: {\n    'Authorization': 'Bearer '+fakeAuth.getAccessToken(),\n  }\n})\n\nexport const headers = {\n  'Authorization': 'Bearer '+fakeAuth.getAccessToken(),\n}\n\nexport default api"],"sourceRoot":""}