{"ast":null,"code":"var _jsxFileName = \"/home/phuchung/Desktop/internship/module-3-java/bi-tool/pages/components/bank_success.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'unfetch';\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Line, Label } from 'recharts';\nimport MaterialTable from 'material-table';\nimport moment from 'moment';\n\nconst BankSuccess = () => {\n  const {\n    0: bank,\n    1: setBank\n  } = useState([]);\n  const {\n    0: currentBank,\n    1: setCurrentBank\n  } = useState('BIDV');\n  const {\n    0: bankSuccess,\n    1: setBankSuccess\n  } = useState([]);\n  useEffect(() => {\n    const fetchBank = async () => {\n      const bankReq = await fetch('http://localhost:8081/api/bank');\n      const bankRes = await bankReq.json();\n      const bankProcessed = bankRes.map(b => b.id);\n      setBank(bankProcessed);\n    };\n\n    fetchBank();\n  }, []);\n  useEffect(() => {\n    const fetchBankSuccess = async () => {\n      const response = await fetch(`http://localhost:8081/api/bank/${currentBank}`);\n      const data = await response.json();\n      const dataProcessed = data.map(b => _objectSpread(_objectSpread({}, b), {}, {\n        success_rate: (b.success_rate * 100).toPrecision(5),\n        recorded_date: moment(b.recorded_date).format('YYYY-MM-DD')\n      }));\n      setBankSuccess(dataProcessed);\n    };\n\n    fetchBankSuccess();\n  }, [currentBank]);\n\n  const handleBankChange = e => {\n    setCurrentBank(e.target.value);\n  };\n\n  const handleFetchAll = async () => {\n    const response = await fetch('http://localhost:8081/api/user/payapp');\n    const data = await response.json();\n    console.log(data);\n  };\n\n  return __jsx(\"div\", {\n    className: \"flex flex-col justify-center items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"inline-block relative w-auto py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, __jsx(\"select\", {\n    className: \"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\",\n    onChange: handleBankChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, bank && bank.map(b => __jsx(\"option\", {\n    key: b,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }\n  }, b))), __jsx(\"div\", {\n    className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"svg\", {\n    className: \"fill-current h-4 w-4\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }, __jsx(\"path\", {\n    d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }))), __jsx(\"button\", {\n    onClick: handleFetchAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"Hello World\")), __jsx(LineChart, {\n    width: 900,\n    height: 300,\n    data: bankSuccess,\n    margin: {\n      top: 30,\n      right: 30,\n      left: 20,\n      bottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), __jsx(XAxis, {\n    dataKey: \"recorded_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Label, {\n    value: \"Date\",\n    position: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  })), __jsx(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), __jsx(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"success_rate\",\n    stroke: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default BankSuccess;","map":{"version":3,"sources":["/home/phuchung/Desktop/internship/module-3-java/bi-tool/pages/components/bank_success.js"],"names":["fetch","React","useEffect","useState","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Line","Label","MaterialTable","moment","BankSuccess","bank","setBank","currentBank","setCurrentBank","bankSuccess","setBankSuccess","fetchBank","bankReq","bankRes","json","bankProcessed","map","b","id","fetchBankSuccess","response","data","dataProcessed","success_rate","toPrecision","recorded_date","format","handleBankChange","e","target","value","handleFetchAll","console","log","top","right","left","bottom"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,OAAjD,EAA0DC,IAA1D,EAAgEC,KAAhE,QAA6E,UAA7E;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACzB,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAAEa,WAAF;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,MAAD,CAAhD;AACA,QAAM;AAAA,OAAEe,WAAF;AAAA,OAAeC;AAAf,MAAkChB,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMkB,SAAS,GAAG,YAAY;AAC7B,YAAMC,OAAO,GAAG,MAAMrB,KAAK,CAAC,gCAAD,CAA3B;AACA,YAAMsB,OAAO,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAtB;AACA,YAAMC,aAAa,GAAGF,OAAO,CAACG,GAAR,CAAaC,CAAD,IAAOA,CAAC,CAACC,EAArB,CAAtB;AACAZ,MAAAA,OAAO,CAACS,aAAD,CAAP;AACA,KALD;;AAMAJ,IAAAA,SAAS;AACT,GARQ,EAQN,EARM,CAAT;AAUAlB,EAAAA,SAAS,CACR,MAAM;AACL,UAAM0B,gBAAgB,GAAG,YAAY;AACpC,YAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAE,kCAAiCgB,WAAY,EAA/C,CAA5B;AACA,YAAMc,IAAI,GAAG,MAAMD,QAAQ,CAACN,IAAT,EAAnB;AACA,YAAMQ,aAAa,GAAGD,IAAI,CAACL,GAAL,CAAUC,CAAD,oCAC3BA,CAD2B;AAE9BM,QAAAA,YAAY,EAAE,CAACN,CAAC,CAACM,YAAF,GAAiB,GAAlB,EAAuBC,WAAvB,CAAmC,CAAnC,CAFgB;AAG9BC,QAAAA,aAAa,EAAEtB,MAAM,CAACc,CAAC,CAACQ,aAAH,CAAN,CAAwBC,MAAxB,CAA+B,YAA/B;AAHe,QAAT,CAAtB;AAKAhB,MAAAA,cAAc,CAACY,aAAD,CAAd;AACA,KATD;;AAUAH,IAAAA,gBAAgB;AAChB,GAbO,EAcR,CAAEZ,WAAF,CAdQ,CAAT;;AAiBA,QAAMoB,gBAAgB,GAAIC,CAAD,IAAO;AAC/BpB,IAAAA,cAAc,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACA,GAFD;;AAIA,QAAMC,cAAc,GAAG,YAAY;AAClC,UAAMX,QAAQ,GAAG,MAAM7B,KAAK,CAAC,uCAAD,CAA5B;AACA,UAAM8B,IAAI,GAAG,MAAMD,QAAQ,CAACN,IAAT,EAAnB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,GAJD;;AAMA,SACC;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAC,wKADX;AAEC,IAAA,QAAQ,EAAEM,gBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEtB,IAAI,IAAIA,IAAI,CAACW,GAAL,CAAUC,CAAD,IAAO;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,CAAjB,CAAhB,CAJV,CADD,EAOC;AAAK,IAAA,SAAS,EAAC,qFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAC,4BAA5C;AAAyE,IAAA,OAAO,EAAC,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,CAAC,EAAC,4EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CAPD,EAYC;AAAQ,IAAA,OAAO,EAAEc,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZD,CADD,EAgBC,MAAC,SAAD;AACC,IAAA,KAAK,EAAE,GADR;AAEC,IAAA,MAAM,EAAE,GAFT;AAGC,IAAA,IAAI,EAAEtB,WAHP;AAIC,IAAA,MAAM,EAAE;AAAEyB,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC,MAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAOC,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPD,EAUC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVD,EAWC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,EAYC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,cAA9B;AAA6C,IAAA,MAAM,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,CAhBD,CADD;AAiCA,CA3ED;;AA6EA,eAAejC,WAAf","sourcesContent":["import fetch from 'unfetch';\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Line, Label } from 'recharts';\nimport MaterialTable from 'material-table';\nimport moment from 'moment';\n\nconst BankSuccess = () => {\n\tconst [ bank, setBank ] = useState([]);\n\tconst [ currentBank, setCurrentBank ] = useState('BIDV');\n\tconst [ bankSuccess, setBankSuccess ] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchBank = async () => {\n\t\t\tconst bankReq = await fetch('http://localhost:8081/api/bank');\n\t\t\tconst bankRes = await bankReq.json();\n\t\t\tconst bankProcessed = bankRes.map((b) => b.id);\n\t\t\tsetBank(bankProcessed);\n\t\t};\n\t\tfetchBank();\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst fetchBankSuccess = async () => {\n\t\t\t\tconst response = await fetch(`http://localhost:8081/api/bank/${currentBank}`);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconst dataProcessed = data.map((b) => ({\n\t\t\t\t\t...b,\n\t\t\t\t\tsuccess_rate: (b.success_rate * 100).toPrecision(5),\n\t\t\t\t\trecorded_date: moment(b.recorded_date).format('YYYY-MM-DD')\n\t\t\t\t}));\n\t\t\t\tsetBankSuccess(dataProcessed);\n\t\t\t};\n\t\t\tfetchBankSuccess();\n\t\t},\n\t\t[ currentBank ]\n\t);\n\n\tconst handleBankChange = (e) => {\n\t\tsetCurrentBank(e.target.value);\n\t};\n\n\tconst handleFetchAll = async () => {\n\t\tconst response = await fetch('http://localhost:8081/api/user/payapp');\n\t\tconst data = await response.json();\n\t\tconsole.log(data);\n\t};\n\n\treturn (\n\t\t<div className=\"flex flex-col justify-center items-center\">\n\t\t\t<div className=\"inline-block relative w-auto py-4\">\n\t\t\t\t<select\n\t\t\t\t\tclassName=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\t\tonChange={handleBankChange}\n\t\t\t\t>\n\t\t\t\t\t{bank && bank.map((b) => <option key={b}>{b}</option>)}\n\t\t\t\t</select>\n\t\t\t\t<div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n\t\t\t\t\t<svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t<path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={handleFetchAll}>Hello World</button>\n\t\t\t</div>\n\t\t\t\n\t\t\t<LineChart\n\t\t\t\twidth={900}\n\t\t\t\theight={300}\n\t\t\t\tdata={bankSuccess}\n\t\t\t\tmargin={{ top: 30, right: 30, left: 20, bottom: 20 }}\n\t\t\t>\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t<XAxis dataKey=\"recorded_date\">\n\t\t\t\t\t<Label value=\"Date\" position=\"bottom\" />\n\t\t\t\t</XAxis>\n\t\t\t\t<YAxis />\n\t\t\t\t<Tooltip />\n\t\t\t\t<Line type=\"monotone\" dataKey=\"success_rate\" stroke=\"#8884d8\" />\n\t\t\t</LineChart>\n\t\t</div>\n\t);\n};\n\nexport default BankSuccess;\n"]},"metadata":{},"sourceType":"module"}