{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phuchung/Desktop/internship/module-3-java/bi-tool/pages/components/bank_success.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from 'unfetch';\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Line, Label } from 'recharts';\nimport moment from 'moment';\n\nvar BankSuccess = function BankSuccess() {\n  _s();\n\n  var _useState = useState([]),\n      bank = _useState[0],\n      setBank = _useState[1];\n\n  var _useState2 = useState('BIDV'),\n      currentBank = _useState2[0],\n      setCurrentBank = _useState2[1];\n\n  var _useState3 = useState([]),\n      bankSuccess = _useState3[0],\n      setBankSuccess = _useState3[1];\n\n  useEffect(function () {\n    var fetchBank = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var bankReq, bankRes, bankProcessed;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:8081/api/bank');\n\n              case 2:\n                bankReq = _context.sent;\n                _context.next = 5;\n                return bankReq.json();\n\n              case 5:\n                bankRes = _context.sent;\n                bankProcessed = bankRes.map(function (b) {\n                  return b.id;\n                });\n                setBank(bankProcessed);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchBank() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchBank();\n  }, []);\n  useEffect(function () {\n    var fetchBankSuccess = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response, data, dataProcessed;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"http://localhost:8081/api/bank/\".concat(currentBank));\n\n              case 2:\n                response = _context2.sent;\n                _context2.next = 5;\n                return response.json();\n\n              case 5:\n                data = _context2.sent;\n                dataProcessed = data.map(function (b) {\n                  return _objectSpread(_objectSpread({}, b), {}, {\n                    success_rate: (b.successRate * 100).toPrecision(5),\n                    recorded_date: moment(b.recordedDate).format('YYYY-MM-DD')\n                  });\n                });\n                console.log(dataProcessed);\n                setBankSuccess(dataProcessed);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fetchBankSuccess() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchBankSuccess();\n  }, [currentBank]);\n\n  var handleBankChange = function handleBankChange(e) {\n    setCurrentBank(e.target.value);\n  };\n\n  return __jsx(\"div\", {\n    className: \"flex flex-col justify-center items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"inline-block relative w-auto py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, __jsx(\"select\", {\n    className: \"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\",\n    onChange: handleBankChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, bank && bank.map(function (b) {\n    return __jsx(\"option\", {\n      key: b,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 31\n      }\n    }, b);\n  })), __jsx(\"div\", {\n    className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"svg\", {\n    className: \"fill-current h-4 w-4\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, __jsx(\"path\", {\n    d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  })))), __jsx(LineChart, {\n    width: 900,\n    height: 300,\n    data: bankSuccess,\n    margin: {\n      top: 30,\n      right: 30,\n      left: 20,\n      bottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), __jsx(XAxis, {\n    dataKey: \"recordedDate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), __jsx(YAxis, {\n    domain: [0, 100],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }), __jsx(Tooltip, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"success_rate\",\n    stroke: \"#8884d8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  })));\n};\n\n_s(BankSuccess, \"OBydHyP7BJv5bBOvee0pZNzoJcs=\");\n\n_c = BankSuccess;\nexport default BankSuccess;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankSuccess\");","map":{"version":3,"sources":["/home/phuchung/Desktop/internship/module-3-java/bi-tool/pages/components/bank_success.js"],"names":["fetch","React","useEffect","useState","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Line","Label","moment","BankSuccess","bank","setBank","currentBank","setCurrentBank","bankSuccess","setBankSuccess","fetchBank","bankReq","json","bankRes","bankProcessed","map","b","id","fetchBankSuccess","response","data","dataProcessed","success_rate","successRate","toPrecision","recorded_date","recordedDate","format","console","log","handleBankChange","e","target","value","top","right","left","bottom"],"mappings":"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","sourcesContent":["import fetch from 'unfetch'\nimport React, { useEffect, useState } from 'react'\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Line, Label } from 'recharts'\nimport moment from 'moment'\n\nconst BankSuccess = () => {\n\tconst [ bank, setBank ] = useState([])\n\tconst [ currentBank, setCurrentBank ] = useState('BIDV')\n\tconst [ bankSuccess, setBankSuccess ] = useState([])\n\n\tuseEffect(() => {\n\t\tconst fetchBank = async () => {\n\t\t\tconst bankReq = await fetch('http://localhost:8081/api/bank')\n\t\t\tconst bankRes = await bankReq.json()\n\t\t\tconst bankProcessed = bankRes.map((b) => b.id)\n\t\t\tsetBank(bankProcessed)\n\t\t}\n\t\tfetchBank()\n\t}, [])\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst fetchBankSuccess = async () => {\n\t\t\t\tconst response = await fetch(`http://localhost:8081/api/bank/${currentBank}`)\n\t\t\t\tconst data = await response.json()\n\t\t\t\tconst dataProcessed = data.map((b) => ({\n\t\t\t\t\t...b,\n\t\t\t\t\tsuccess_rate: (b.successRate * 100).toPrecision(5),\n\t\t\t\t\trecorded_date: moment(b.recordedDate).format('YYYY-MM-DD')\n\t\t\t\t}))\n\t\t\t\tconsole.log(dataProcessed)\n\t\t\t\tsetBankSuccess(dataProcessed)\n\t\t\t}\n\t\t\tfetchBankSuccess()\n\t\t},\n\t\t[ currentBank ]\n\t)\n\n\tconst handleBankChange = (e) => {\n\t\tsetCurrentBank(e.target.value)\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-col justify-center items-center\">\n\t\t\t<div className=\"inline-block relative w-auto py-4\">\n\t\t\t\t<select\n\t\t\t\t\tclassName=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\t\tonChange={handleBankChange}\n\t\t\t\t>\n\t\t\t\t\t{bank && bank.map((b) => <option key={b}>{b}</option>)}\n\t\t\t\t</select>\n\t\t\t\t<div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n\t\t\t\t\t<svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t<path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<LineChart\n\t\t\t\twidth={900}\n\t\t\t\theight={300}\n\t\t\t\tdata={bankSuccess}\n\t\t\t\tmargin={{ top: 30, right: 30, left: 20, bottom: 20 }}\n\t\t\t>\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t<XAxis dataKey=\"recordedDate\" />\n\t\t\t\t<YAxis domain={[ 0, 100 ]} />\n\t\t\t\t<Tooltip />\n\t\t\t\t<Line type=\"monotone\" dataKey=\"success_rate\" stroke=\"#8884d8\" />\n\t\t\t</LineChart>\n\t\t</div>\n\t)\n}\n\nexport default BankSuccess\n"]},"metadata":{},"sourceType":"module"}