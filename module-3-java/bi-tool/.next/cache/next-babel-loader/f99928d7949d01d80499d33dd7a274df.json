{"ast":null,"code":"var _jsxFileName = \"/home/phuchung/Desktop/internship/module-3-java/bi-tool/pages/components/userpayapp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useTable } from 'react-table';\n\nconst UserPayApp = () => {\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    col1: 'react-table',\n    col2: 'rocks'\n  }, {\n    col1: 'whatever',\n    col2: 'you want'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Column 1',\n    accessor: 'col1' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return __jsx(\"table\", _extends({}, getTableProps(), {\n    style: {\n      border: 'solid 1px blue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }), __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, headerGroups.map(headerGroup => __jsx(\"tr\", _extends({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }), headerGroup.headers.map(column => __jsx(\"th\", _extends({}, column.getHeaderProps(), {\n    style: {\n      borderBottom: 'solid 3px red',\n      background: 'aliceblue',\n      color: 'black',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }), column.render('Header')))))), __jsx(\"tbody\", _extends({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }), rows.map(row => {\n    prepareRow(row);\n    return __jsx(\"tr\", _extends({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }), row.cells.map(cell => {\n      return __jsx(\"td\", _extends({}, cell.getCellProps(), {\n        style: {\n          padding: '10px',\n          border: 'solid 1px gray',\n          background: 'papayawhip'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }\n      }), cell.render('Cell'));\n    }));\n  })));\n};\n\nexport default UserPayApp;","map":{"version":3,"sources":["/home/phuchung/Desktop/internship/module-3-java/bi-tool/pages/components/userpayapp.js"],"names":["useTable","UserPayApp","data","React","useMemo","col1","col2","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;;AACA,MAAMC,UAAU,GAAG,MAAM;AACxB,QAAMC,IAAI,GAAGC,KAAK,CAACC,OAAN,CACZ,MAAM,CACL;AACCC,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,IAAI,EAAE;AAFP,GADK,EAKL;AACCD,IAAAA,IAAI,EAAE,aADP;AAECC,IAAAA,IAAI,EAAE;AAFP,GALK,EASL;AACCD,IAAAA,IAAI,EAAE,UADP;AAECC,IAAAA,IAAI,EAAE;AAFP,GATK,CADM,EAeZ,EAfY,CAAb;AAiBA,QAAMC,OAAO,GAAGJ,KAAK,CAACC,OAAN,CACf,MAAM,CACL;AACCI,IAAAA,MAAM,EAAE,UADT;AAECC,IAAAA,QAAQ,EAAE,MAFX,CAEkB;;AAFlB,GADK,EAKL;AACCD,IAAAA,MAAM,EAAE,UADT;AAECC,IAAAA,QAAQ,EAAE;AAFX,GALK,CADS,EAWf,EAXe,CAAhB;AAaA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MAAuEd,QAAQ,CAAC;AAAEO,IAAAA,OAAF;AAAWL,IAAAA;AAAX,GAAD,CAArF;AACA,SACC,4BAAWQ,aAAa,EAAxB;AAA4B,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,YAAY,CAACI,GAAb,CAAkBC,WAAD,IACjB,yBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACED,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,IACxB,yBACKA,MAAM,CAACC,cAAP,EADL;AAEC,IAAA,KAAK,EAAE;AACNC,MAAAA,YAAY,EAAE,eADR;AAENC,MAAAA,UAAU,EAAE,WAFN;AAGNC,MAAAA,KAAK,EAAE,OAHD;AAINC,MAAAA,UAAU,EAAE;AAJN,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASEL,MAAM,CAACM,MAAP,CAAc,QAAd,CATF,CADA,CADF,CADA,CADF,CADD,EAoBC,4BAAWf,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACEE,IAAI,CAACG,GAAL,CAAUW,GAAD,IAAS;AAClBb,IAAAA,UAAU,CAACa,GAAD,CAAV;AACA,WACC,yBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACED,GAAG,CAACE,KAAJ,CAAUb,GAAV,CAAec,IAAD,IAAU;AACxB,aACC,yBACKA,IAAI,CAACC,YAAL,EADL;AAEC,QAAA,KAAK,EAAE;AACNC,UAAAA,OAAO,EAAE,MADH;AAENjB,UAAAA,MAAM,EAAE,gBAFF;AAGNQ,UAAAA,UAAU,EAAE;AAHN,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQEO,IAAI,CAACJ,MAAL,CAAY,MAAZ,CARF,CADD;AAYA,KAbA,CADF,CADD;AAkBA,GApBA,CADF,CApBD,CADD;AA8CA,CA9ED;;AAgFA,eAAezB,UAAf","sourcesContent":["import { useTable } from 'react-table'\nconst UserPayApp = () => {\n\tconst data = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tcol1: 'Hello',\n\t\t\t\tcol2: 'World'\n\t\t\t},\n\t\t\t{\n\t\t\t\tcol1: 'react-table',\n\t\t\t\tcol2: 'rocks'\n\t\t\t},\n\t\t\t{\n\t\t\t\tcol1: 'whatever',\n\t\t\t\tcol2: 'you want'\n\t\t\t}\n\t\t],\n\t\t[]\n\t)\n\tconst columns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tHeader: 'Column 1',\n\t\t\t\taccessor: 'col1' // accessor is the \"key\" in the data\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Column 2',\n\t\t\t\taccessor: 'col2'\n\t\t\t}\n\t\t],\n\t\t[]\n\t)\n\tconst { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data })\n\treturn (\n\t\t<table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n\t\t\t<thead>\n\t\t\t\t{headerGroups.map((headerGroup) => (\n\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\n\t\t\t\t\t\t{headerGroup.headers.map((column) => (\n\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t{...column.getHeaderProps()}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderBottom: 'solid 3px red',\n\t\t\t\t\t\t\t\t\tbackground: 'aliceblue',\n\t\t\t\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{column.render('Header')}\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</thead>\n\t\t\t<tbody {...getTableBodyProps()}>\n\t\t\t\t{rows.map((row) => {\n\t\t\t\t\tprepareRow(row)\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr {...row.getRowProps()}>\n\t\t\t\t\t\t\t{row.cells.map((cell) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\t\t{...cell.getCellProps()}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tpadding: '10px',\n\t\t\t\t\t\t\t\t\t\t\tborder: 'solid 1px gray',\n\t\t\t\t\t\t\t\t\t\t\tbackground: 'papayawhip'\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{cell.render('Cell')}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nexport default UserPayApp\n"]},"metadata":{},"sourceType":"module"}